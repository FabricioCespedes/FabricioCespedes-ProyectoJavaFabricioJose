/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Presentacion;

import Entidades.EDiaFeriado;
import Entidades.EMotivoAusencia;
import LogicaNegocios.CronogramaBLO;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author josea
 */
public class frmOtrosAus extends javax.swing.JInternalFrame {
    DefaultTableModel model;
    EDiaFeriado dia;
    /**
     * Creates new form frmOtrosAus
     */
    public frmOtrosAus() {
        initComponents();
        llenarComboMotivos();
        try {
            llenarTabla("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        spinnerFechaI = new javax.swing.JSpinner();
        jCBMotivos = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableAusencias = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnCrear = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel7.setText("Otros motivos:");

        spinnerFechaI.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1645588768167L), null, null, java.util.Calendar.YEAR));

        jLabel8.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel8.setText("Fecha:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(spinnerFechaI, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 268, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(63, 63, 63)
                .addComponent(jCBMotivos, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(spinnerFechaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBMotivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jtableAusencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtableAusencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableAusenciasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtableAusencias);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnCrear.setText("Guardar");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(69, 69, 69))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtableAusenciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableAusenciasMouseClicked
        CronogramaBLO cronogramaBLO = new CronogramaBLO();
        int fila = 0;
        if (evt.getClickCount() == 2) {
            fila = jtableAusencias.rowAtPoint(evt.getPoint());
            try {
                dia = cronogramaBLO.obtenerFeriado("idDiaFeriado = " + jtableAusencias.getValueAt(fila, 0));
                if (!dia.getFecha().equals("")) {
                    JOptionPane.showMessageDialog(this, "Fecha " + dia.getFecha() + " selecionada");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_jtableAusenciasMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        CronogramaBLO cronogramaBL = new CronogramaBLO();
        try {
            if (!dia.getFecha().equals("")) {
                if (cronogramaBL.eliminarDiaF(dia) > -1) {
                    JOptionPane.showMessageDialog(this, "Ausencia eliminada");
                    llenarTabla("");
                    dia = null;
                } else {
                    JOptionPane.showMessageDialog(this, "Hubo un error al eliminar");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione un día que editar");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        EDiaFeriado fecha = new EDiaFeriado();
        CronogramaBLO cronogramaBL = new CronogramaBLO();
        try {
            fecha.setFecha(formatearFecha(spinnerFechaI.getValue(), false));
            EMotivoAusencia motivo = cronogramaBL.obtenerMotivo("justificacion = '" + (String) jCBMotivos.getSelectedItem() + "'");
            if (!motivo.getMotivo().equals("")) {
                fecha.setMotivo(motivo);
                if (cronogramaBL.insertarDiaF(fecha) > -1) {
                    JOptionPane.showMessageDialog(this, "Ausencia insertada");
                    llenarTabla("");
                } else {
                    JOptionPane.showMessageDialog(this, "Hubo un error al insertar");
                }
                
                
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        CronogramaBLO cronogramaBL = new CronogramaBLO();
        try {
            if (!dia.getFecha().equals("")) {
                dia.setFecha(formatearFecha(spinnerFechaI.getValue(), false));
                EMotivoAusencia motivo = cronogramaBL.obtenerMotivo("justificacion = '" + (String) jCBMotivos.getSelectedItem() + "'");
                dia.setMotivo(motivo);
                if (!motivo.getMotivo().equals("")) {
                    if (cronogramaBL.actualizarDiaF(dia) > -1) {
                        JOptionPane.showMessageDialog(this, "Ausencia modificada");
                        llenarTabla("");
                        dia = null;
                    } else {
                        JOptionPane.showMessageDialog(this, "Hubo un error al modificar");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No se encontró el motivo");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione un día que editar");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnActualizarActionPerformed
    
    private void llenarComboMotivos() {
        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        List<EMotivoAusencia> list;
        CronogramaBLO cronogramaBL = new CronogramaBLO();
        try {
            list = cronogramaBL.listarMotivos("justificacion NOT LIKE 'Vacaciones' AND justificacion NOT LIKE 'Incapacidad' AND justificacion NOT LIKE 'Abolicion del ejercito' AND justificacion NOT LIKE 'Año nuevo' AND justificacion NOT LIKE 'Incapacidad' AND justificacion NOT LIKE 'Dia de Juan Santa Maria' AND justificacion NOT LIKE 'Dia de la independencia' AND justificacion NOT LIKE 'Dia de la madre' AND justificacion NOT LIKE 'Dia del trabajador' AND justificacion NOT LIKE 'Jueves Santo' AND justificacion NOT LIKE 'Viernes Santo' AND justificacion NOT LIKE 'Navidad' AND justificacion NOT LIKE 'Virgen de los santos'");
            for (EMotivoAusencia motivo : list) {
                jCBMotivos.addItem(motivo.toString());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Hubo un errror al cargar los motivos");
        }
    }
    
    private void llenarTabla(String condition) throws Exception {
        List<EDiaFeriado> list;
        CronogramaBLO cronogramaBL = new CronogramaBLO();
        Object[] row = new Object[4];

        limpiarTabla();

        try {
            list = cronogramaBL.listarDiasF(condition);

            for (EDiaFeriado d : list) {
                row[0] = d.getIdDia();
                row[1] = d.getFecha();
                row[2] = d.getMotivo().getIdMotivoAusencia();
                model.addRow(row);
            }
        } catch (Exception e) {
            throw e;
        }
    }
    
    private void limpiarTabla() {
        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        model.addColumn("ID");
        model.addColumn("Fecha");
        model.addColumn("idMotivo");
        jtableAusencias.setModel(model);
    }
    
    private String formatearFecha(Object value, boolean inv) {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd");

        if (inv == true) {
            formatter = new SimpleDateFormat("MM/dd/yyyy");
        }

        String fecha = formatter.format(value);
        return fecha;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> jCBMotivos;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtableAusencias;
    private javax.swing.JSpinner spinnerFechaI;
    // End of variables declaration//GEN-END:variables
}
