/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Presentacion;

import Entidades.EDiaAusente;
import Entidades.EMotivoAusencia;
import Entidades.EProfesor;
import LogicaNegocios.CronogramaBLO;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author josea
 */
public class frmIncapacidades extends javax.swing.JInternalFrame {
    EProfesor profesor;
    DefaultTableModel model;
    EDiaAusente dia;
    /**
     * Creates new form frmIncapacidades
     */
    public frmIncapacidades() {
        initComponents();
        try{
            llenarTabla("MotivosDeAusencias.justificacion = 'Incapacidad'");
        }catch (Exception e){
            JOptionPane.showMessageDialog(this, "ERROR: "+e.getMessage());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableAusencias = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnCrear = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        spinnerFechaI = new javax.swing.JSpinner();
        spinnerFechaF = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        btnBuscarProfesor = new javax.swing.JButton();
        txtNomProfesorV = new javax.swing.JTextField();
        txtIdProfesorV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setTitle("Administrar Incapacidades");

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jtableAusencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtableAusencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableAusenciasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtableAusencias);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnCrear.setText("Guardar");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(btnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCrear, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRegresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 997, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel7.setText("Fecha inicial");

        jLabel8.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel8.setText("Fecha final");

        spinnerFechaI.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1645588768167L), null, null, java.util.Calendar.YEAR));

        spinnerFechaF.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1645588768167L), null, null, java.util.Calendar.YEAR));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spinnerFechaI, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(349, 349, 349)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(spinnerFechaF, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(spinnerFechaF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerFechaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnBuscarProfesor.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnBuscarProfesor.setText("Seleccionar profesor");
        btnBuscarProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProfesorActionPerformed(evt);
            }
        });

        txtNomProfesorV.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtNomProfesorV.setEnabled(false);

        txtIdProfesorV.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtIdProfesorV.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel3.setText("Identificación");

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel4.setText("Nombre");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnBuscarProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addGap(31, 31, 31)
                .addComponent(txtIdProfesorV, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtNomProfesorV, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(txtIdProfesorV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNomProfesorV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscarProfesor))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnBuscarProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProfesorActionPerformed
        frmBuscarProfesores vistaBuscarProfesores = new frmBuscarProfesores(null, true);
        vistaBuscarProfesores.setLocationRelativeTo(this);

        vistaBuscarProfesores.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent wE) {
                try {
                    profesor = vistaBuscarProfesores.getProfesor();
                    if (profesor != null) {
                        txtNomProfesorV.setText(profesor.getNombre() + " " + profesor.getApellido1() + " " + profesor.getApellido2());
                        txtIdProfesorV.setText(String.valueOf(profesor.getIdPersona()));
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                }
            }

        });
        vistaBuscarProfesores.setVisible(true);
    }//GEN-LAST:event_btnBuscarProfesorActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        EDiaAusente fecha = new EDiaAusente();
        CronogramaBLO cronogramaBL = new CronogramaBLO();
        try {
            fecha.setFecha(formatearFecha(spinnerFechaI.getValue(), false));
            fecha.setFechaFin(formatearFecha(spinnerFechaF.getValue(), false));
            fecha.setProfesor(profesor);
            fecha.setMotivo(cronogramaBL.obtenerMotivo("justificacion = 'Incapacidad'"));
            if (cronogramaBL.insertarDiaA(fecha) > -1) {
                JOptionPane.showMessageDialog(this, "Ausencia insertada");
                limpiarTextos();
                llenarTabla("MotivosDeAusencias.justificacion = 'Incapacidad'");
            } else {
                JOptionPane.showMessageDialog(this, "Hubo un error al insertar");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        if (!txtIdProfesorV.equals("")) {
            CronogramaBLO cronogramaBL = new CronogramaBLO();
            try {
                EDiaAusente fecha = new EDiaAusente();
                EProfesor profe = new EProfesor();
                fecha.setFecha(formatearFecha(spinnerFechaI.getValue(),false));
                fecha.setFechaFin(formatearFecha(spinnerFechaF.getValue(), false));
                profe = cronogramaBL.obtenerProfesor("idProfesor = "+txtIdProfesorV.getText());
                fecha.setProfesor(profe);
                fecha.setMotivo(cronogramaBL.obtenerMotivo("justificacion = 'Incapacidad'"));
                if (!profe.getNombre().equals("")) {
                    if (cronogramaBL.actualizarDiaA(fecha, dia) > 0) {
                        JOptionPane.showMessageDialog(this, "Ausencia modificada");
                        limpiarTextos();
                        llenarTabla("MotivosDeAusencias.justificacion = 'Incapacidad'");
                    } else {
                        JOptionPane.showMessageDialog(this, "Hubo un error al modificar");
                    }   
                }else{
                    JOptionPane.showMessageDialog(this, "No se encontro al profesor");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            CronogramaBLO cronogramaBLO = new CronogramaBLO();
            if (!txtIdProfesorV.equals("")) {
                if (cronogramaBLO.eliminarDiaA(dia) > 0) {
                    JOptionPane.showMessageDialog(this, "Incapacidad eliminada");
                    limpiarTabla();
                    llenarTabla("MotivosDeAusencias.justificacion = 'Incapacidad'");
                } else {
                    JOptionPane.showMessageDialog(this, "Hubo un problema al elimninar");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jtableAusenciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableAusenciasMouseClicked
        CronogramaBLO cronogramaBLO = new CronogramaBLO();
        int fila = 0;
        EProfesor profesor = new EProfesor();
        String condicion = "";
        if (evt.getClickCount() == 2) {
            fila = jtableAusencias.rowAtPoint(evt.getPoint());
            condicion = "idProfesor = " + jtableAusencias.getValueAt(fila, 2);
            try {
                dia = cronogramaBLO.obtenerDiaA("fechaInicio = '" + jtableAusencias.getValueAt(fila, 0) + "' and fechaFin = '"+jtableAusencias.getValueAt(fila, 1)+"' and idProfesor= "+jtableAusencias.getValueAt(fila, 2));
                profesor = cronogramaBLO.obtenerProfesor(condicion);
                if (profesor != null && dia != null) {
                    txtIdProfesorV.setText(String.valueOf(profesor.getIdPersona()));
                    txtNomProfesorV.setText(profesor.getNombre() + " " + profesor.getApellido1() + " " + profesor.getApellido2());
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_jtableAusenciasMouseClicked

    private void llenarTabla(String condition) throws Exception {
        List<EDiaAusente> list;
        CronogramaBLO cronogramaBL = new CronogramaBLO();
        Object[] row = new Object[6];

        limpiarTabla();

        try {
            list = cronogramaBL.listarDiasA(condition);

            for (EDiaAusente d : list) {
                EMotivoAusencia motivoAux = cronogramaBL.obtenerMotivo("idMotivo ="+d.getMotivo().getIdMotivoAusencia());
                EProfesor profesorAux = cronogramaBL.obtenerProfesor("idProfesor ="+d.getProfesor().getIdPersona());
                row[0] = d.getFecha();
                row[1] = d.getFechaFin();
                row[2] = d.getProfesor().getIdPersona();
                if (!profesorAux.getNombre().equals("")) {
                    row[3] = profesorAux.getNombre()+" "+profesorAux.getApellido1()+" "+profesorAux.getApellido2();                   
                }else{
                    row[3] ="";
                }
                row[4] = d.getMotivo().getIdMotivoAusencia();
                if (!motivoAux.getMotivo().equals("")) {
                    row[5] = motivoAux.getMotivo();                    
                }else{
                   row[5] =""; 
                }
                model.addRow(row);
            }
        } catch (Exception e) {
            throw e;
        }
    }
    
    private void limpiarTabla() {
        limpiarTextos();
        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        model.addColumn("Fecha Inicial");
        model.addColumn("Fecha Final");
        model.addColumn("idProfesor");
        model.addColumn("Profesor");
        model.addColumn("idMotivo");
        model.addColumn("Motivo");
        jtableAusencias.setModel(model);
        ocultarColumnas();
    }

    private void limpiarTextos() {
        txtIdProfesorV.setText("");
        txtNomProfesorV.setText("");
    }

    private String formatearFecha(Object value, boolean inv) {

        SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd");

        if (inv == true) {
            formatter = new SimpleDateFormat("MM/dd/yyyy");
        }

        String fecha = formatter.format(value);
        return fecha;
    }
    
    public void ocultarColumnas(){
        jtableAusencias.getColumnModel().getColumn(2).setMaxWidth(0);
        jtableAusencias.getColumnModel().getColumn(2).setMinWidth(0);
        jtableAusencias.getColumnModel().getColumn(2).setPreferredWidth(0);
        jtableAusencias.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(0);
        jtableAusencias.getTableHeader().getColumnModel().getColumn(2).setMinWidth(0);
        jtableAusencias.getColumnModel().getColumn(4).setMaxWidth(0);
        jtableAusencias.getColumnModel().getColumn(4).setMinWidth(0);
        jtableAusencias.getColumnModel().getColumn(4).setPreferredWidth(0);
        jtableAusencias.getTableHeader().getColumnModel().getColumn(4).setMaxWidth(0);
        jtableAusencias.getTableHeader().getColumnModel().getColumn(4).setMinWidth(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscarProfesor;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtableAusencias;
    private javax.swing.JSpinner spinnerFechaF;
    private javax.swing.JSpinner spinnerFechaI;
    private javax.swing.JTextField txtIdProfesorV;
    private javax.swing.JTextField txtNomProfesorV;
    // End of variables declaration//GEN-END:variables
}
